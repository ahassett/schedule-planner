{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahass\\\\schedule-planner\\\\src\\\\components\\\\ClassList.js\";\nimport React, { Component } from 'react';\nimport ClassItem from './ClassItem';\nimport PropTypes from 'prop-types'; // for web-scraping\n//const axios = require('axios');\n//const cheerio = require('cheerio');\n\nconst express = require('express');\n\nconst request = require('request');\n\nconst app = express(); // fetching data\n\nconst url = 'http://www.middlebury.edu/academics';\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  next();\n});\napp.get('/academics', (req, res) => {\n  request({\n    url: url\n  }, (error, response, body) => {\n    if (error || response.statusCode !== 200) {\n      return res.status(500).json({\n        type: 'error',\n        message: err.message\n      });\n    }\n\n    res.json(JSON.parse(body));\n  });\n});\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, () => console.log(\"listening on \".concat(PORT)));\naxios.get(url).then(response => {\n  console.log(response.data);\n}).catch(error => {\n  console.log(error);\n});\n\nclass ClassList extends Component {\n  render() {\n    return this.props.classes.map(classname => React.createElement(ClassItem, {\n      key: classname.id,\n      classname: classname,\n      saveClass: this.props.saveClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n} // Checking PropTypes\n\n\nClassList.propTypes = {\n  classes: PropTypes.array.isRequired\n};\nexport default ClassList;","map":{"version":3,"sources":["C:/Users/ahass/schedule-planner/src/components/ClassList.js"],"names":["React","Component","ClassItem","PropTypes","express","require","request","app","url","use","req","res","next","header","get","error","response","body","statusCode","status","json","type","message","err","JSON","parse","PORT","process","env","listen","console","log","axios","then","data","catch","ClassList","render","props","classes","map","classname","id","saveClass","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAME,GAAG,GAAGH,OAAO,EAAnB,C,CAEA;;AACA,MAAMI,GAAG,GAAG,qCAAZ;AAEAD,GAAG,CAACE,GAAJ,CAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAD,EAAAA,IAAI;AACL,CAHD;AAKAL,GAAG,CAACO,GAAJ,CAAQ,YAAR,EAAsB,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAClCL,EAAAA,OAAO,CACL;AAAEE,IAAAA,GAAG,EAAEA;AAAP,GADK,EAEL,CAACO,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AACzB,QAAIF,KAAK,IAAIC,QAAQ,CAACE,UAAT,KAAwB,GAArC,EAA0C;AACxC,aAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEC,GAAG,CAACD;AAA9B,OAArB,CAAP;AACD;;AAEDX,IAAAA,GAAG,CAACS,IAAJ,CAASI,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAT;AACD,GARI,CAAP;AAUD,CAXD;AAaA,MAAMS,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAnB,GAAG,CAACsB,MAAJ,CAAWH,IAAX,EAAiB,MAAMI,OAAO,CAACC,GAAR,wBAA4BL,IAA5B,EAAvB;AAGAM,KAAK,CAAClB,GAAN,CAAUN,GAAV,EACKyB,IADL,CACUjB,QAAQ,IAAI;AACdc,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACkB,IAArB;AACH,CAHL,EAIKC,KAJL,CAIWpB,KAAK,IAAI;AACZe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACH,CANL;;AASA,MAAMqB,SAAN,SAAwBnC,SAAxB,CAAkC;AAE9BoC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAwBC,SAAD,IAC1B,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAGA,SAAS,CAACC,EAA3B;AAAgC,MAAA,SAAS,EAAGD,SAA5C;AAAwD,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWK,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAGH;;AAN6B,C,CASlC;;;AACAP,SAAS,CAACQ,SAAV,GAAsB;AAClBL,EAAAA,OAAO,EAAEpC,SAAS,CAAC0C,KAAV,CAAgBC;AADP,CAAtB;AAIA,eAAeV,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ClassItem from './ClassItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n// for web-scraping\r\n//const axios = require('axios');\r\n//const cheerio = require('cheerio');\r\nconst express = require('express');\r\nconst request = require('request');\r\n\r\nconst app = express();\r\n\r\n// fetching data\r\nconst url = 'http://www.middlebury.edu/academics';\r\n\r\napp.use((req, res, next) => {\r\n  res.header('Access-Control-Allow-Origin', '*');\r\n  next();\r\n});\r\n\r\napp.get('/academics', (req, res) => {\r\n  request(\r\n    { url: url },\r\n    (error, response, body) => {\r\n      if (error || response.statusCode !== 200) {\r\n        return res.status(500).json({ type: 'error', message: err.message });\r\n      }\r\n\r\n      res.json(JSON.parse(body));\r\n    }\r\n  )\r\n});\r\n\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => console.log(`listening on ${PORT}`));\r\n\r\n\r\naxios.get(url)\r\n    .then(response => {\r\n        console.log(response.data);\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n    })\r\n\r\n\r\nclass ClassList extends Component {\r\n\r\n    render() {\r\n        return this.props.classes.map((classname) => (\r\n            <ClassItem key={ classname.id } classname={ classname } saveClass={this.props.saveClass}/>\r\n        ));\r\n    }\r\n}\r\n\r\n// Checking PropTypes\r\nClassList.propTypes = {\r\n    classes: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ClassList;\r\n"]},"metadata":{},"sourceType":"module"}